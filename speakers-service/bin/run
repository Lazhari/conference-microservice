#!/usr/bin/env node

const http = require('http');
const axios = require('axios');

const config = require('../config')[process.env.NODE_ENV || 'development'];

const log = config.log();
const service = require('../server/service')(config);

const server = http.createServer(service);

const registryUrl =
  process.env.REGISTRY_URL || 'http://localhost:3000/register/';

// Important - a service should not have a fixed port but should randomly choose one
server.listen(process.env.PORT || 0);

server.on('listening', () => {
  const registerServer = () =>
    axios.put(
      `${registryUrl}${config.name}/${config.version}/${server.address().port}`,
    );
  const unregisterServer = () =>
    axios.delete(
      `${registryUrl}${config.name}/${config.version}/${server.address().port}`,
    );
  registerServer();
  const interval = setInterval(registerServer, 20000);
  const cleanup = async () => {
    clearInterval(interval);
    await unregisterServer();
  };
  process.on('uncaughtException', async () => {
    await cleanup();
    process.exit(0);
  });
  process.on('SIGINT', async () => {
    await cleanup();
    process.exit(0);
  });
  process.on('SIGTERM', async () => {
    await cleanup();
    process.exit(0);
  });
  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${service.get(
      'env',
    )} mode.`,
  );
});
